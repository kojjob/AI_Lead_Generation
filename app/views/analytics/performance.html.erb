<div class="min-h-screen bg-gradient-to-br from-indigo-50 via-purple-50 to-pink-50">
  <!-- Performance Analytics Header -->
  <div class="bg-white/80 backdrop-blur-sm border-b border-indigo-100 sticky top-0 z-40">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="py-4">
        <div class="flex items-center justify-between">
          <div>
            <h1 class="text-3xl font-bold bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent">
              Performance Analytics
            </h1>
            <p class="mt-1 text-gray-600">Detailed performance metrics and comparative analysis</p>
          </div>
          
          <!-- Time Granularity Selector -->
          <div class="flex items-center space-x-3">
            <div class="bg-white rounded-lg border border-gray-200 p-1 flex">
              <button class="px-3 py-1.5 text-sm font-medium text-indigo-600 bg-indigo-50 rounded">Hourly</button>
              <button class="px-3 py-1.5 text-sm font-medium text-gray-600 hover:bg-gray-50 rounded">Daily</button>
              <button class="px-3 py-1.5 text-sm font-medium text-gray-600 hover:bg-gray-50 rounded">Weekly</button>
              <button class="px-3 py-1.5 text-sm font-medium text-gray-600 hover:bg-gray-50 rounded">Monthly</button>
            </div>
          </div>
        </div>
        
        <!-- Navigation Tabs -->
        <div class="mt-4 flex space-x-1 border-b border-gray-200">
          <%= link_to "Overview", analytics_path, class: "px-4 py-2 text-sm font-medium text-gray-600 hover:text-gray-800 hover:bg-gray-50 rounded-t-lg" %>
          <%= link_to "Performance", analytics_performance_path, class: "px-4 py-2 text-sm font-medium text-indigo-600 border-b-2 border-indigo-600 bg-indigo-50 rounded-t-lg" %>
          <%= link_to "Trends", analytics_trends_path, class: "px-4 py-2 text-sm font-medium text-gray-600 hover:text-gray-800 hover:bg-gray-50 rounded-t-lg" %>
          <%= link_to "Keywords", analytics_keywords_path, class: "px-4 py-2 text-sm font-medium text-gray-600 hover:text-gray-800 hover:bg-gray-50 rounded-t-lg" %>
          <%= link_to "Leads", analytics_leads_path, class: "px-4 py-2 text-sm font-medium text-gray-600 hover:text-gray-800 hover:bg-gray-50 rounded-t-lg" %>
          <%= link_to "Integrations", analytics_integrations_path, class: "px-4 py-2 text-sm font-medium text-gray-600 hover:text-gray-800 hover:bg-gray-50 rounded-t-lg" %>
        </div>
      </div>
    </div>
  </div>

  <!-- Performance Content -->
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    
    <!-- Period Comparison Cards -->
    <div class="mb-8">
      <h2 class="text-xl font-semibold text-gray-900 mb-4">Period Comparison</h2>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        <% if @comparative_analysis %>
          <% [:mentions, :leads, :conversion_rate].each do |metric| %>
            <div class="bg-white rounded-2xl shadow-sm p-6 border border-gray-100">
              <div class="flex items-center justify-between mb-4">
                <h3 class="text-sm font-medium text-gray-600 uppercase tracking-wider">
                  <%= metric.to_s.humanize %>
                </h3>
                <% change = @comparative_analysis[:change][metric] %>
                <% if change %>
                  <span class="<%= change > 0 ? 'text-green-600' : 'text-red-600' %> text-sm font-medium flex items-center">
                    <%= change > 0 ? '↑' : '↓' %> <%= number_to_percentage(change.abs, precision: 1) %>
                  </span>
                <% end %>
              </div>
              
              <div class="grid grid-cols-2 gap-4">
                <div>
                  <p class="text-xs text-gray-500 mb-1">Current Period</p>
                  <p class="text-2xl font-bold text-gray-900">
                    <%= number_with_delimiter(@comparative_analysis[:current][metric]) %>
                  </p>
                </div>
                <div>
                  <p class="text-xs text-gray-500 mb-1">Previous Period</p>
                  <p class="text-2xl font-bold text-gray-400">
                    <%= number_with_delimiter(@comparative_analysis[:previous][metric]) %>
                  </p>
                </div>
              </div>
              
              <!-- Mini sparkline chart -->
              <div class="mt-4 h-12">
                <canvas id="sparkline_<%= metric %>" class="w-full h-full"></canvas>
              </div>
            </div>
          <% end %>
        <% end %>
      </div>
    </div>

    <!-- Detailed Metrics Grid -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
      <!-- Efficiency Metrics -->
      <div class="bg-white rounded-2xl shadow-sm p-6 border border-gray-100">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Efficiency Metrics</h3>
        <% if @performance_metrics[:efficiency_metrics] %>
          <div class="space-y-4">
            <% @performance_metrics[:efficiency_metrics].each do |key, value| %>
              <div class="flex items-center justify-between py-2 border-b border-gray-100">
                <div>
                  <p class="text-sm font-medium text-gray-900"><%= key.to_s.humanize %></p>
                  <p class="text-xs text-gray-500">Target: <%= value[:target] %></p>
                </div>
                <div class="text-right">
                  <p class="text-lg font-semibold <%= value[:current] >= value[:target] ? 'text-green-600' : 'text-amber-600' %>">
                    <%= value[:current] %>
                  </p>
                  <p class="text-xs text-gray-500"><%= value[:unit] %></p>
                </div>
              </div>
            <% end %>
          </div>
        <% end %>
      </div>

      <!-- Quality Metrics -->
      <div class="bg-white rounded-2xl shadow-sm p-6 border border-gray-100">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Quality Metrics</h3>
        <% if @performance_metrics[:quality_metrics] %>
          <div class="space-y-4">
            <% @performance_metrics[:quality_metrics].each do |key, value| %>
              <div>
                <div class="flex items-center justify-between mb-1">
                  <span class="text-sm font-medium text-gray-700"><%= key.to_s.humanize %></span>
                  <span class="text-sm font-semibold text-gray-900"><%= value[:score] %>/100</span>
                </div>
                <div class="w-full bg-gray-200 rounded-full h-2">
                  <div class="bg-gradient-to-r from-indigo-500 to-purple-500 h-2 rounded-full transition-all duration-500" 
                       style="width: <%= value[:score] %>%"></div>
                </div>
              </div>
            <% end %>
          </div>
        <% end %>
      </div>
    </div>

    <!-- Time Series Charts -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
      <!-- Velocity Chart -->
      <div class="bg-white rounded-2xl shadow-sm p-6 border border-gray-100">
        <div class="flex items-center justify-between mb-4">
          <h3 class="text-lg font-semibold text-gray-900">Lead Velocity</h3>
          <select class="text-sm border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500">
            <option>Last 7 Days</option>
            <option>Last 30 Days</option>
            <option>Last 90 Days</option>
          </select>
        </div>
        <div class="relative h-64">
          <canvas id="velocityChart" class="absolute inset-0 w-full h-full"></canvas>
        </div>
      </div>

      <!-- Response Time Distribution -->
      <div class="bg-white rounded-2xl shadow-sm p-6 border border-gray-100">
        <div class="flex items-center justify-between mb-4">
          <h3 class="text-lg font-semibold text-gray-900">Response Time Distribution</h3>
          <div class="flex items-center space-x-2">
            <span class="text-sm text-gray-500">Avg:</span>
            <span class="text-sm font-semibold text-gray-900">
              <%= @performance_data[:response_times][:average] rescue "N/A" %> min
            </span>
          </div>
        </div>
        <div class="relative h-64">
          <canvas id="responseTimeChart" class="absolute inset-0 w-full h-full"></canvas>
        </div>
      </div>
    </div>

    <!-- Benchmarks Section -->
    <div class="bg-white rounded-2xl shadow-sm p-6 border border-gray-100 mb-8">
      <h3 class="text-lg font-semibold text-gray-900 mb-4">Performance Benchmarks</h3>
      <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
        <% if @benchmarks %>
          <% @benchmarks.each do |benchmark| %>
            <div class="text-center">
              <div class="relative">
                <svg class="transform -rotate-90 w-32 h-32 mx-auto">
                  <circle cx="64" cy="64" r="56" stroke="currentColor" stroke-width="8" fill="none" class="text-gray-200"></circle>
                  <circle cx="64" cy="64" r="56" stroke="currentColor" stroke-width="8" fill="none" 
                          stroke-dasharray="<%= 351.86 * (benchmark[:current].to_f / 100) %> 351.86"
                          class="<%= benchmark[:status] == 'above' ? 'text-green-500' : 'text-amber-500' %>"></circle>
                </svg>
                <div class="absolute inset-0 flex items-center justify-center">
                  <div>
                    <p class="text-2xl font-bold text-gray-900"><%= benchmark[:current] %>%</p>
                    <p class="text-xs text-gray-500">of target</p>
                  </div>
                </div>
              </div>
              <p class="mt-3 text-sm font-medium text-gray-900"><%= benchmark[:name] %></p>
              <p class="text-xs text-gray-500">Target: <%= benchmark[:target] %></p>
            </div>
          <% end %>
        <% end %>
      </div>
    </div>

    <!-- Detailed Performance Table -->
    <div class="bg-white rounded-2xl shadow-sm border border-gray-100 overflow-hidden">
      <div class="px-6 py-4 border-b border-gray-200">
        <h3 class="text-lg font-semibold text-gray-900">Detailed Performance Data</h3>
      </div>
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
          <thead class="bg-gray-50">
            <tr>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Mentions</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Leads</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Conversion Rate</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Avg Score</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Response Time</th>
            </tr>
          </thead>
          <tbody class="bg-white divide-y divide-gray-200">
            <% if @time_series_data[:daily] %>
              <% @time_series_data[:daily].each do |day_data| %>
                <tr class="hover:bg-gray-50">
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    <%= day_data[:date].strftime("%b %d, %Y") %>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    <%= number_with_delimiter(day_data[:mentions]) %>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    <%= number_with_delimiter(day_data[:leads]) %>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm">
                    <span class="<%= day_data[:conversion_rate] > 10 ? 'text-green-600' : 'text-gray-900' %> font-medium">
                      <%= number_to_percentage(day_data[:conversion_rate], precision: 1) %>
                    </span>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    <%= number_with_precision(day_data[:avg_score], precision: 1) %>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    <%= day_data[:response_time] %> min
                  </td>
                </tr>
              <% end %>
            <% end %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
  // Velocity Chart
  const velocityCtx = document.getElementById('velocityChart');
  if (velocityCtx) {
    new Chart(velocityCtx, {
      type: 'bar',
      data: {
        labels: <%= (@time_series_data[:daily]&.map { |d| d[:date].strftime("%b %d") } || []).to_json.html_safe %>,
        datasets: [{
          label: 'New Leads',
          data: <%= (@time_series_data[:daily]&.map { |d| d[:new_leads] } || []).to_json %>,
          backgroundColor: 'rgba(99, 102, 241, 0.8)',
        }, {
          label: 'Qualified Leads',
          data: <%= (@time_series_data[:daily]&.map { |d| d[:qualified_leads] } || []).to_json %>,
          backgroundColor: 'rgba(168, 85, 247, 0.8)',
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        layout: {
          padding: 0
        },
        scales: {
          x: {
            stacked: true,
            grid: {
              display: false
            }
          },
          y: {
            stacked: true,
            beginAtZero: true
          }
        }
      }
    });
  }

  // Response Time Chart
  const responseCtx = document.getElementById('responseTimeChart');
  if (responseCtx) {
    new Chart(responseCtx, {
      type: 'scatter',
      data: {
        datasets: [{
          label: 'Response Times',
          data: <%= (@performance_data[:response_times][:distribution] || []).to_json %>,
          backgroundColor: 'rgba(99, 102, 241, 0.5)',
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        layout: {
          padding: 0
        },
        scales: {
          x: {
            title: {
              display: true,
              text: 'Time of Day'
            }
          },
          y: {
            title: {
              display: true,
              text: 'Response Time (minutes)'
            },
            beginAtZero: true
          }
        }
      }
    });
  }

  // Mini Sparkline Charts
  <% [:mentions, :leads, :conversion_rate].each do |metric| %>
    const sparklineCtx_<%= metric %> = document.getElementById('sparkline_<%= metric %>');
    if (sparklineCtx_<%= metric %>) {
      new Chart(sparklineCtx_<%= metric %>, {
        type: 'line',
        data: {
          labels: Array.from({length: 7}, (_, i) => i),
          datasets: [{
            data: <%= (@comparative_analysis[:sparkline_data][metric] || Array.new(7, 0)).to_json %>,
            borderColor: 'rgba(99, 102, 241, 0.8)',
            borderWidth: 2,
            fill: false,
            tension: 0.4,
            pointRadius: 0
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            legend: { display: false },
            tooltip: { enabled: false }
          },
          scales: {
            x: { display: false },
            y: { display: false }
          }
        }
      });
    }
  <% end %>
});
</script>